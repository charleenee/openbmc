#!/bin/bash
#
# Copyright 2017-present Facebook. All Rights Reserved.
#
# This program file is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program in a file named COPYING; if not, write to the
# Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301 USA

set -eux -o pipefail

dir=$(dirname "$(realpath "$0")")
image=${1:?Please specify image URL or file as first argument.}
checksums=${2:?Please specify JSON checksum file as second argument.}
target=${3:?Please specify target hostname or \"[ip::v6]\" as third argument.}

checksum_steps=("$dir/check_image.py" --checksum "$checksums")
checksum_steps+=(--append-new-checksums /tmp/checksums.json) # off target

options=(-o "LogLevel=error" -o "StrictHostKeyChecking=no")
options+=(-o "UserKnownHostsFile=/dev/null")
sshpass=(sshpass -p0penBmc)

files=($dir/{virtualcat,partition,system,improve_system}.py /tmp/checksums.json)

upgrade_steps=(/tmp/improve_system.py --checksums /tmp/checksums.json) # on target

if [[ $image == http* ]]; then
  download=$(mktemp)
  curl -s "$image" -o "$download"
  "${checksum_steps[@]}" "$download"
  rm "$download"
  upgrade_steps+=("$image")
else
  "${checksum_steps[@]}" "$image"
  files+=($image)
  upgrade_steps+=(/tmp/$(basename "$image"))
fi

if [[ $target =~ .*:.* ]]; then  
  "${sshpass[@]}" scp "${options[@]}" "${files[@]}" "root@[$target]:/tmp/"
else
  "${sshpass[@]}" scp "${options[@]}" "${files[@]}" "root@$target:/tmp/"
fi

rc=0
"${sshpass[@]}" ssh "${options[@]}" "root@$target" "${upgrade_steps[@]}" ||
  rc=$?
# A dropped SSH connection due to shutdown is expected.
[[ $rc == 0 || $rc == 255 ]] || exit $rc

sleep 6m

checks="head -n 1 /etc/issue; uptime"
"${sshpass[@]}" ssh "${options[@]}" "root@$target" "$checks"
