#!/bin/sh
#
# Copyright 2014-present Facebook. All Rights Reserved.
#
# This program file is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program in a file named COPYING; if not, write to the
# Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301 USA
#

. /usr/local/fbpackages/utils/ast-functions
SLED_TYPE="/mnt/data/kv_store/sled_system_conf"
I2CSET="/usr/sbin/i2cset -y "

SB_CPLD_ADDR="0x0f"
BOARD_ID=$(get_bmc_board_id)

SLOT=
SLOT_NUM=
I2C_NUM=

function show_usage() {
  echo "Usage: recovery-bic-util [ slot1 | slot2 | slot3 | slot4 ] [-f] <uart image path> <ipmb image path>"
  echo "-f : forced update"
  echo "Recovery update for server board BIC"
  echo ""
}

function get_slot_num() {
  local slot_num=0
  case $1 in
    slot1)
      slot_num=1
    ;;
    slot2)
      slot_num=2
    ;;
    slot3)
      slot_num=3
    ;;
    slot4)
      slot_num=4
    ;;
  esac

  echo $slot_num
}

function get_bus_num() {
  local bus=0
  case $1 in
    slot1)
      bus=4
    ;;
    slot2)
      bus=5
    ;;
    slot3)
      bus=6
    ;;
    slot4)
      bus=7
    ;;
  esac

  echo $bus
}

function set_cpld_reg() {
  local bus=$1
  local addr=$2
  local data=$3
  $I2CSET $bus $addr $data
}

if [ $# -gt 5 ]; then
    show_usage
    exit -1;
fi

# Only support slot[1|2|3|4]
if [[ "$1" =~ ^(slot[1-4]{1})$ ]]; then
  SLOT=$1
else
  show_usage
  exit -1;
fi

SLOT_NUM=$(get_slot_num $SLOT)
I2C_NUM=$(get_bus_num $SLOT)
SLED_TYPE=$(cat $SLED_TYPE)
CPLD_ADDR=

# Set slot UART to SB BIC
echo "Setting slot UART to SB BIC"
if [[ "$SLED_TYPE" =~ ^(Type_(8|17))$ ]]; then
  if ! [ "$SLOT" == "slot1" ]; then
    echo "$SLOT is empty"
    exit -1;
  else
    # notify CPLD to set the uart src to class 2
    set_cpld_reg $I2C_NUM $SB_CPLD_ADDR "0x00 0x02"
  fi
else
  if [ $(is_server_prsnt ${SLOT_NUM}) == "0" ]; then
    echo "The $SLOT is empty"
    exit -1;
  elif [ $(is_slot_12v_on ${SLOT_NUM}) == "0" ]; then
    echo "The $SLOT is 12V-off"
    exit -1;
  else
    # notify CPLD to set the uart src to class 1
    set_cpld_reg $I2C_NUM $SB_CPLD_ADDR "0x00 0x01"
  fi
fi
set_cpld_reg $I2C_NUM $SB_CPLD_ADDR "0x01 0x03"

# Set BIC boot from UART
echo "Setting BIC boot from UART"
set_cpld_reg $I2C_NUM $SB_CPLD_ADDR "0x10 0x01"

# set UART to 115200
/bin/stty -F /dev/ttyS$SLOT_NUM 115200
echo "Doing the recovery update..."
if [ "$2" == "-f" ] ; then
  cat $3 > /dev/ttyS$SLOT_NUM
else
  cat $2 > /dev/ttyS$SLOT_NUM
fi

sleep 5

# set UART back to 57600
/bin/stty -F /dev/ttyS$SLOT_NUM 57600
echo "Executing the fw-util for updating bic..."
if [ "$2" == "-f" ] ; then
  /usr/bin/fw-util slot$SLOT_NUM --force --update bic $4
else
  /usr/bin/fw-util slot$SLOT_NUM --update bic $3
fi

# Set BIC boot from spi
set_cpld_reg $I2C_NUM $SB_CPLD_ADDR "0x10 0x00"
echo "Power-cycling the server..."
/usr/local/bin/power-util slot$SLOT_NUM 12V-cycle

echo
echo "------------------------------------"
echo "Recovery SB BIC is finished!"
echo
